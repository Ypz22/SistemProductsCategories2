version: '3.8'

networks:
  test-network:
    driver: bridge

volumes:
  db-data:

services:

  # Base de datos con healthcheck y el mismo user/pass del primer compose
  test-db2:
    image: mysql:8.0
    container_name: test-db2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-padmin"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Categor√≠as (build local, mismas variables del primero)
  app-categories:
    build:
      context: ./backend/categories
      dockerfile: Dockerfile
    container_name: c-app-categories
    restart: always
    environment:
      DB_HOST: test-db2
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: test
    depends_on:
      test-db2:
        condition: service_healthy
    networks:
      - test-network
    # Si quieres exponer directo para pruebas locales, descomenta:
    # ports:
    #   - "8082:8082"

  # Productos (build local, mismas variables del primero)
  app-products:
    build:
      context: ./backend/products
      dockerfile: Dockerfile
    container_name: c-app-products
    restart: always
    environment:
      DB_HOST: test-db2
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: test
    depends_on:
      test-db2:
        condition: service_healthy
    networks:
      - test-network
    # Para pruebas locales:
    # ports:
    #   - "8081:8081"

  # Frontend (build local). Sin exponer puerto: lo sirve Nginx (edge) en :80
  frontend:
    build:
      context: ./frontend/app-product-categories
      dockerfile: Dockerfile
    container_name: c-sistema
    restart: always
    depends_on:
      - app-categories
      - app-products
    networks:
      - test-network

  # Reverse proxy Nginx (expone todo en :80)
  edge:
    image: nginx:alpine
    container_name: edge
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./edge.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - app-categories
      - app-products
    networks:
      - test-network